# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

appName = openid-connect-userinfo

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "config.GuiceModule"

play.http.filters = "filters.MicroserviceFilters"
play.http.errorHandler = "handlers.ErrorHandler"

appUrl = "https://"${appName}".protected.mdtp"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900


# Session configuration
# ~~~~~
play.http.session.httpOnly = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# DES API endpoint
des.individual.endpoint = /pay-as-you-earn/02.00.00/individuals/

feature.addressLine5 = false
feature.countryCode = false

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  confidenceLevel = 50

  controllers.DocumentationController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.LiveUserInfoController = {
    needsAuth = true
    needsLogging = true
    needsAuditing = false
    authParams.pattern = "/([\\d\\w-]+).*"
  }

  controllers.SandboxUserInfoController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }

  controllers.testOnly.FeatureSwitchController = {
    needsAuth = false
    needsLogging = true
    needsAuditing = false
  }
}

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# Microservice specific config

wiremock-port = 6008
wiremock-port = ${?WIREMOCK_PORT}

api.access.version {
  1_0 {
    type = PRIVATE
    status = STABLE
    allow-list {
      applicationIds.0 = 649def0f-3ed3-4df5-8ae1-3e687a9143ea
      applicationIds.1 = df8c10db-01fb-4543-b77e-859267462231
      applicationIds.2 = 9a32c713-7741-4aae-b39d-957021fb97a9
    }
    endpointsEnabled = true
  }
}


api.access {
  type = PRIVATE
  allow-list.applicationIds = []
}

microservice {
  services {

    auth {
      host = localhost
      port = 8500
    }

    datastream {
      host = localhost
      port = 8100
    }

    des {
      host = localhost
      port = 9625
      bearer-token = "local"
      environment = "local"
    }

    third-party-delegated-authority {
      host = localhost
      port = 9609
    }

    user-details {
      host = localhost
      port = 9978
    }
  }
}



log-user-info-response-payload = false

http-verbs.retries.ssl-engine-closed-already.enabled = true
